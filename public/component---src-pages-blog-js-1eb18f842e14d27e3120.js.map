{"version":3,"sources":["webpack:///./src/pages/blog.module.scss","webpack:///./src/components/pagination.module.scss","webpack:///./src/components/PaginationBlog.js","webpack:///./src/pages/blog.js"],"names":["module","exports","PaginationLinks","currentPage","numberOfPages","toString","aria-label","className","paginationStyles","body","Array","from","length","_","i","key","activeClassName","activeNavItem","to","blogQuery","BlogPage","title","query","render","data","Math","ceil","allMarkdownRemark","totalCount","blogStyles","posts","edges","map","edge","post","node","fields","slug","frontmatter","content","date","tags","tag"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,2BAA2B,KAAO,2BAA2B,QAAU,8BAA8B,SAAW,kC,qBCA/MD,EAAOC,QAAU,CAAC,cAAgB,4CAA4C,KAAO,mC,+GC6BtEC,EAzBS,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,cAGjBD,EAAc,GAAM,IAA0BA,EAAc,GAAGE,YAClDF,EAAc,GAAGE,WAEnD,OACC,yBAAKC,aAAW,0BAA0BC,UAAWC,IAAiBC,MACpEC,MAAMC,KAAK,CAAEC,OAAQR,IAAiB,SAACS,EAAGC,GAAJ,OACtC,yBAAKC,IAAG,eAAgBD,EAAI,IAC3B,kBAAC,OAAD,CAAME,gBAAiBR,IAAiBS,cAAeC,GAAE,UAAiB,IAANJ,EAAU,GAAK,SAAWA,EAAI,KAChGA,EAAI,S,iCCwCLK,EAAS,YAyBAC,UAxEE,WACf,IACIhB,EAGL,OACC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKiB,MAAM,SACd,oCACA,kBAAC,OAAD,CAAMH,GAAG,cAAT,QAGA,kBAAC,cAAD,CAAaI,MAAOH,EAAWI,OAAQ,SAAAC,GAGhC,OAFDpB,EAAgBqB,KAAKC,KAAKF,EAAKG,kBAAkBC,WAZnC,GAeZ,6BACL,wBAAIrB,UAAWsB,IAAWC,OACxBN,EAAKG,kBAAkBI,MAAMC,KAAI,SAACC,EAAMnB,GACxC,OACC,wBAAIC,IAAKD,EAAGP,UAAWsB,IAAWK,MACjC,kBAAC,OAAD,CAAM3B,UAAWsB,IAAWpB,KAAMS,GAAE,SAAWe,EAAKE,KAAKC,OAAOC,MAC/D,4BAAKJ,EAAKE,KAAKG,YAAYjB,OAC1B,yBAAKd,UAAWsB,IAAWU,SAC3B,2BAAIN,EAAKE,KAAKG,YAAYE,MAC1B,yBAAKjC,UAAWsB,IAAWY,MACzBR,EAAKE,KAAKG,YAAYG,KAAKT,KAAI,SAACU,EAAK5B,GAAN,OAC/B,0BAAMC,IAAKD,GACV,kBAAC,OAAD,CAAMI,GAAE,aAAewB,GAAvB,IAAgCA,eAUvC,kBAAC,EAAD,CAAiBvC,YAAa,EAAGC,cAAeA","file":"component---src-pages-blog-js-1eb18f842e14d27e3120.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"blog-module--posts--a25pe\",\"body\":\"blog-module--body--1rvYa\",\"post\":\"blog-module--post--1jMia\",\"tags\":\"blog-module--tags--3-2Sm\",\"content\":\"blog-module--content--3JkS-\",\"pageInfo\":\"blog-module--page-info--dVXRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeNavItem\":\"pagination-module--active-nav-item--2vV_j\",\"body\":\"pagination-module--body--1SIAN\"};","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport paginationStyles from './pagination.module.scss'\n\nconst PaginationLinks = ({currentPage, numberOfPages}) => {\n\tconst isFirst = currentPage === 1 // variabel untuk menguji apakah ini adalah halaman pertama, berfungsi untuk membuat logic pagination next, prev\n\tconst isLast = currentPage === numberOfPages // variabel untuk menguji apakah ini adalah halaman terakhir, berfungsi untuk membuat logic pagination next, prev\n\tconst previousPage = currentPage - 1 === 1 ? '/blog' : '/page/' + (currentPage - 1).toString() // variabel untuk membuat logic apakah kita bisa melakukan pagination secara previous(berpindah ke halaman sebelumya)\n\tconst nextPage = '/blog/page/' + (currentPage + 1).toString() // variabel untuk membuat logic apakah kita bisa melakukan pagination secara next(berpindah ke halaman selanjutnya)\n\n\treturn (\n\t\t<div aria-label=\"Page navigation example\" className={paginationStyles.body}>\n\t\t\t{Array.from({ length: numberOfPages }, (_, i) => currentPage === i + 1 ? (\n\t\t\t\t<div key={`page-number${i + 1}`}>\n\t\t\t\t\t<Link activeClassName={paginationStyles.activeNavItem} to={`/blog/${i === 0 ? '' : 'page/' + (i + 1)}`}>\n\t\t\t\t\t\t{i + 1}\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\t\t\t\t\t\t\t\t\n\t\t\t) : (\n\t\t\t\t<div key={`page-number${i + 1}`}>\n\t\t\t\t\t<Link activeClassName={paginationStyles.activeNavItem} to={`/blog/${i === 0 ? '' : 'page/' + (i + 1)}`}>\n\t\t\t\t\t\t{i + 1}\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default PaginationLinks","import React from \"react\";\nimport { Link, graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from '../components/layout'\nimport PaginationLinks from '../components/PaginationBlog'\nimport SEO from \"../components/seo\"\n\nimport blogStyles from './blog.module.scss'\n\nconst BlogPage = () => {\t\n  const postsPerPage = 6; // jumlah post per page yang akan ditampilkan\n  let numberOfPages;\n\n\n\treturn (\n\t\t<Layout>\n\t\t    <SEO title=\"Blog\" />\n\t\t\t<h1>Blog</h1>\n\t\t\t<Link to='/blog/tags'>\n\t\t\t\tTags\n\t\t\t</Link>\n\t\t\t<StaticQuery query={blogQuery} render={data => {\n      \t\t\tnumberOfPages = Math.ceil(data.allMarkdownRemark.totalCount / postsPerPage)\n\n\t\t        return (\n\t\t        \t<div>\n\t\t\t\t\t\t<ol className={blogStyles.posts}>\n\t\t\t\t\t\t\t{data.allMarkdownRemark.edges.map((edge, i) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<li key={i} className={blogStyles.post}>\n\t\t\t\t\t\t\t\t\t\t<Link className={blogStyles.body} to={`/blog/${edge.node.fields.slug}`}>\n\t\t\t\t\t\t\t\t\t\t\t<h2>{edge.node.frontmatter.title}</h2>\t\t\t\t\t\t\n \t\t\t\t\t\t\t\t\t\t\t<div className={blogStyles.content}>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{edge.node.frontmatter.date}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={blogStyles.tags}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{edge.node.frontmatter.tags.map((tag, i) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span key={i}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/blog/tag/${tag}`}>#{tag}</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ol>\n\t\t\t\t\t  \t<PaginationLinks currentPage={1} numberOfPages={numberOfPages} />\n\t\t        \t</div>\n\t\t        )\n\n\t\t\t}} />\n\t\t</Layout>\n\t);\n}\n\nconst blogQuery = graphql`\n\tquery blogQuery{\n\t  allMarkdownRemark (\n\t\t\tsort: { fields: [frontmatter___postNumber], order:ASC }\n\t\t\tlimit: 6\n\t  ) {\n\t  \ttotalCount\n\t    edges {\n\t      node {\n\t        frontmatter {\n\t          title\n\t          date\n\t          tags\n\t        }\n\t        html\n\t        fields {\n\t          slug\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n`;\n\n\nexport default BlogPage\n\n"],"sourceRoot":""}